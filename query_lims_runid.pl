#! /usr/bin/perl 

use strict;
use warnings;
use Encode;
use Encode::CN;
use DBI;
use DBD::Oracle qw(:ora_fetch_orient :ora_exe_modes);

die " \n\tplease specify the flowcell ID, such as AD06A6ACXX \n\tExample:\n\n\t\t $0 AD06A6ACXX\n\n" unless $ARGV[0];
open (INFILE, ">abc.txt") or die $!;

# my $dbh = DBI->connect("dbi:Oracle:host=192.168.4.240;sid=ORCLLIMS", "wangwei", "123");
my $dbh = DBI->connect("dbi:Oracle:host=192.168.4.240;sid=ORCLLIMS", "BEIR", "BEIR");

#my $SQL = "SELECT  A.HS_READ1_DATETIME AS ON_MACHINE_TIME, A.FLOWCELL AS FLOWCELL_ID, A.LANE_NUMBER AS LANE_ID, A.SAMPLE_MX_CODE AS SAMPLE_ID, A.SAMPLE_MX_NAME AS SAMPLE_NAME, A.LIB_TYPE AS LIB_TYPE, A.LIB_QJ_LENGHT AS LIB_SIZE, A.LIB_INDEX_NO AS INDEX_ID, A.LIB_BG_DATE AS LIB_TIME, A.PJ_CODE AS PRO_ID, A.PJ_NAME AS PRO_NAME, ( CASE B.CHQPCR_MER_JZ WHEN 0 THEN B.CHQPCR_MER ELSE B.CHQPCR_MER_JZ END ) AS CONCENTRATION FROM ( SELECT  A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.LIB_ID, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.LIB_INDEX_NO, A.LIB_BG_DATE, B.PJ_CODE, B.PJ_NAME FROM ( SELECT  A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.LIB_ID, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.LIB_INDEX_NO, A.LIB_BG_DATE, B.PJ_ID FROM ( SELECT  A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.LIB_ID, B.SAMPLE_MX_CODE, B.SAMPLE_MX_NAME, B.LIB_TYPE, B.LIB_QJ_LENGHT, B.LIB_INDEX_NO, TO_CHAR(B.LIB_BG_DATE, 'yyyy-mm-dd') AS LIB_BG_DATE, B.TASK_ID FROM ( SELECT  A.HS_READ1_DATETIME, A.FLOWCELL,  A.LANE_NUMBER, B.LIB_ID  FROM ( SELECT  A.HS_READ1_DATETIME, A.FLOWCELL,  A.LANE_NUMBER, B.LIB_POOL_ID FROM ( SELECT  TO_CHAR(A.HS_READ1_DATETIME, 'yyyy-mm-dd') AS HS_READ1_DATETIME  , A.FLOWCELL  , B.LANE_NUMBER  , B.LIB_ID  FROM CS_HS_INFO A , LANE_INFO B  WHERE  A.FLOWCELL = '$ARGV[0]' AND A.ID = B.FLOWCELL_ID  ) A , LIB_INFO B WHERE A.LIB_ID = B.ID  ) A , POOLING_MX B WHERE A.LIB_POOL_ID = B.POOL_ID  ) A , LIB_INFO B WHERE A.LIB_ID = B.ID  ) A , MIS_TASK B WHERE A.TASK_ID = B.ID  ) A , PROJECT_INFO B WHERE A.PJ_ID = B.ID  ) A LEFT JOIN CHECKQPCR B ON A.LIB_ID = B.LIB_ID  ORDER BY A.FLOWCELL ASC , A.LANE_NUMBER ASC , A.SAMPLE_MX_CODE ASC  ";
#my $SQL = "SELECT A.HS_READ1_DATETIME AS ON_MACHINE_TIME, A.FLOWCELL AS FLOWCELL_ID, A.LANE_NUMBER AS LANE_ID, A.POOL_LIB_NAME AS POOL_LIB_NAME, A.QC_HHLLMD AS CONCENTRTION_POOL, A.QC_HHTUL AS VOLUMN_POOL, A.SAMPLE_MX_CODE AS SAMPLE_ID, A.SAMPLE_MX_NAME AS SAMPLE_NAME, A.LIB_NAME AS LIB_NAME, A.LIB_TYPE AS LIB_TYPE, A.LIB_QJ_LENGHT AS LIB_SIZE, A.LIB_INDEX_NO AS Index_ID, A.LIB_BG_DATE AS LIB_TIME, A.TASK_DATA_TOTAL AS DATA_TOTAL, A.PJ_CODE AS PRO_ID, A.PJ_NAME AS PRO_NAME, ( CASE B.CHQPCR_MER_JZ WHEN 0 THEN B.CHQPCR_MER ELSE B.CHQPCR_MER_JZ END ) AS LIB_CONCENTRATION FROM ( SELECT TO_CHAR(A.HS_READ1_DATETIME, 'yyyy-mm-dd') AS HS_READ1_DATETIME, A.FLOWCELL, B.LANE_NUMBER, NULL AS POOL_LIB_NAME, NULL AS QC_HHLLMD, NULL AS QC_HHTUL, B.LIB_ID, C.SAMPLE_MX_CODE, C.SAMPLE_MX_NAME, C.LIB_NAME, C.LIB_TYPE, C.LIB_QJ_LENGHT, C.LIB_INDEX_NO, TO_CHAR(C.LIB_BG_DATE, 'yyyy-mm-dd') AS LIB_BG_DATE, D.TASK_DATA_TOTAL, F.PJ_CODE, F.PJ_NAME FROM CS_HS_INFO A , LANE_INFO B , LIB_INFO C , MIS_TASK_MX D , MIS_TASK E , PROJECT_INFO F WHERE A.FLOWCELL = '$ARGV[0]' AND A.CSHS_FLAG = '1' AND A.ID = B.FLOWCELL_ID AND B.LIB_ID = C.ID AND C.TASK_MX_ID = D.ID AND D.TASK_ID = E.ID AND E.PJ_ID = F.ID UNION ALL SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.LIB_INDEX_NO, A.LIB_BG_DATE, A.TASK_DATA_TOTAL, B.PJ_CODE, B.PJ_NAME FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.LIB_INDEX_NO, A.LIB_BG_DATE, A.TASK_DATA_TOTAL, B.PJ_ID FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, B.SAMPLE_MX_CODE, B.SAMPLE_MX_NAME, B.LIB_NAME, B.LIB_TYPE, B.LIB_QJ_LENGHT, B.LIB_INDEX_NO, TO_CHAR(B.LIB_BG_DATE, 'yyyy-mm-dd') AS LIB_BG_DATE, B.TASK_ID, C.TASK_DATA_TOTAL FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, B.POOL_LIB_NAME, B.QC_HHLLMD, B.QC_HHTUL, C.LIB_ID FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, B.LIB_POOL_ID FROM ( SELECT TO_CHAR(A.HS_READ1_DATETIME, 'yyyy-mm-dd') AS HS_READ1_DATETIME , A.FLOWCELL , B.LANE_NUMBER , B.LIB_ID FROM CS_HS_INFO A , LANE_INFO B WHERE A.FLOWCELL = '$ARGV[0]' AND A.CSHS_FLAG = '1' AND A.ID = B.FLOWCELL_ID ) A , LIB_INFO B WHERE A.LIB_ID = B.ID ) A , POOLING_MAIN B, POOLING_MX C WHERE A.LIB_POOL_ID = B.ID AND B.ID = C.POOL_ID ) A , LIB_INFO B, MIS_TASK_MX C WHERE A.LIB_ID = B.ID AND B.TASK_MX_ID = C.ID ) A , MIS_TASK B WHERE A.TASK_ID = B.ID ) A , PROJECT_INFO B WHERE A.PJ_ID = B.ID ) A LEFT JOIN CHECKQPCR B ON A.LIB_ID = B.LIB_ID ORDER BY A.FLOWCELL ASC , A.LANE_NUMBER ASC , A.LIB_INDEX_NO ASC ";
my $SQL = "SELECT A.HS_READ1_DATETIME AS ON_MACHINE_TIME, A.FLOWCELL AS FLOWCELL_ID, A.LANE_NUMBER AS LANE_ID, A.POOL_LIB_NAME AS POOL_LIB_NAME, A.QC_HHLLMD AS POOL_CONCENT, A.QC_HHTUL AS POOL_VOL, A.SAMPLE_MX_CODE AS SAMPLE_ID, A.SAMPLE_MX_NAME AS SAMPLE_NAME, A.LIB_NAME AS LIB_NAME, A.LIB_TYPE AS LIB_TYPE, A.LIB_QJ_LENGHT AS LIB_SIZE, A.LIB_INDEX_NO AS Index_ID, A.LIB_BG_DATE AS LIB_TIME, A.TASK_DATA_TOTAL AS DATA_VOL, A.PJ_CODE AS PRO_ID, A.PJ_NAME AS PRO_NAME, ( CASE B.CHQPCR_MER_JZ WHEN 0 THEN B.CHQPCR_MER ELSE B.CHQPCR_MER_JZ END ) AS LIB_CONCENT FROM ( SELECT TO_CHAR(A.HS_READ1_DATETIME, 'yyyy-mm-dd') AS HS_READ1_DATETIME, A.FLOWCELL, B.LANE_NUMBER, NULL AS POOL_LIB_NAME, NULL AS QC_HHLLMD, NULL AS QC_HHTUL, B.LIB_ID, C.SAMPLE_MX_CODE, C.SAMPLE_MX_NAME, C.LIB_NAME, C.LIB_TYPE, C.LIB_QJ_LENGHT, TO_CHAR(C.LIB_INDEX_NO) AS LIB_INDEX_NO, TO_CHAR(C.LIB_BG_DATE, 'yyyy-mm-dd') AS LIB_BG_DATE, D.TASK_DATA_TOTAL, F.PJ_CODE, F.PJ_NAME FROM CS_HS_INFO A , LANE_INFO B , LIB_INFO C , MIS_TASK_MX D , MIS_TASK E , PROJECT_INFO F WHERE A.FLOWCELL = '$ARGV[0]' AND A.CSHS_FLAG = '1' AND A.ID = B.FLOWCELL_ID AND B.LIB_ID = C.ID AND C.TASK_MX_ID = D.ID AND D.TASK_ID = E.ID AND E.PJ_ID = F.ID UNION ALL SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.POOL_INDEX_NO AS LIB_INDEX_NO, A.LIB_BG_DATE, A.TASK_DATA_TOTAL, B.PJ_CODE, B.PJ_NAME FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, A.POOL_INDEX_NO, A.SAMPLE_MX_CODE, A.SAMPLE_MX_NAME, A.LIB_NAME, A.LIB_TYPE, A.LIB_QJ_LENGHT, A.LIB_BG_DATE, A.TASK_DATA_TOTAL, B.PJ_ID FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, A.POOL_LIB_NAME, A.QC_HHLLMD, A.QC_HHTUL, A.LIB_ID, A.POOL_INDEX_NO, B.SAMPLE_MX_CODE, B.SAMPLE_MX_NAME, B.LIB_NAME, B.LIB_TYPE, B.LIB_QJ_LENGHT, TO_CHAR(B.LIB_BG_DATE, 'yyyy-mm-dd') AS LIB_BG_DATE, B.TASK_ID, C.TASK_DATA_TOTAL FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, B.POOL_LIB_NAME, B.QC_HHLLMD, B.QC_HHTUL, C.LIB_ID, C.POOL_INDEX_NO FROM ( SELECT A.HS_READ1_DATETIME, A.FLOWCELL, A.LANE_NUMBER, B.LIB_POOL_ID FROM ( SELECT TO_CHAR(A.HS_READ1_DATETIME, 'yyyy-mm-dd') AS HS_READ1_DATETIME , A.FLOWCELL , B.LANE_NUMBER , B.LIB_ID FROM CS_HS_INFO A , LANE_INFO B WHERE A.FLOWCELL = '$ARGV[0]' AND A.CSHS_FLAG = '1' AND A.ID = B.FLOWCELL_ID ) A , LIB_INFO B WHERE A.LIB_ID = B.ID ) A , POOLING_MAIN B, POOLING_MX C WHERE A.LIB_POOL_ID = B.ID AND B.ID = C.POOL_ID ) A , LIB_INFO B, MIS_TASK_MX C WHERE A.LIB_ID = B.ID AND B.TASK_MX_ID = C.ID ) A , MIS_TASK B WHERE A.TASK_ID = B.ID ) A , PROJECT_INFO B WHERE A.PJ_ID = B.ID ) A LEFT JOIN CHECKQPCR B ON A.LIB_ID = B.LIB_ID ORDER BY A.FLOWCELL ASC , A.LANE_NUMBER ASC , A.LIB_INDEX_NO ASC ";
my $sth=$dbh->prepare($SQL);
$sth->execute();
my @row;
while ((@row) = $sth->fetchrow()) {
#   print "ON_MACHINE_TIME\tFLOWCELL_ID\tLANE_ID\tSAMPLE_ID\tSAMPLE_NAME\tLIB_TYPE\tLIB_SIZE\tINDEX_ID\tLIB_TIME\tPRO_ID\tPRO_NAME\tCONCENTRATION\n";
   foreach (@row) {
#       print encode('utf8', decode("GBK", $_)),"\t";
        print decode("GBK",$_),"\t";
        my $temp_ = $_;
        if ($temp_ =~ /\xB2\xFA\xC7\xB0/ ) {
            print "YESSSSSSSS1\n";
        }
#        print INFILE $_,"\t";
   }
   print "\n";
#
#    foreach (@row) {
#        print $_,"\n";
#        print find_encoding("zh_CN")->name;
#        print "\t";
#    }
#    print "\n";
    last;
}
